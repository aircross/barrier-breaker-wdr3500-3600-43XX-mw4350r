--- a/net/netfilter/xt_layer7.c
+++ b/net/netfilter/xt_layer7.c
@@ -364,8 +364,8 @@
 }
 
 /* write out num_packets to userland. */
-static int layer7_read_proc(char* page, char ** start, off_t off, int count,
-                            int* eof, void * data)
+static ssize_t layer7_read_proc(struct file *filp, char __user *page,
+                            size_t count, loff_t *data)
 {
 	if(num_packets > 99 && net_ratelimit())
 		printk(KERN_ERR "layer7: NOT REACHED. num_packets too big\n");
@@ -375,14 +375,12 @@
 	page[2] = '\n';
 	page[3] = '\0';
 
-	*eof=1;
-
 	return 3;
 }
 
 /* Read in num_packets from userland */
-static int layer7_write_proc(struct file* file, const char* buffer,
-                             unsigned long count, void *data)
+static ssize_t layer7_write_proc(struct file *file, const char __user *buffer,
+                             size_t count, loff_t *data)
 {
 	char * foo = kmalloc(count, GFP_ATOMIC);
 
@@ -661,12 +659,20 @@
 }
 
 /* register the proc file */
-static void layer7_init_proc(void)
+static const struct file_operations layer7_fops = {
+       .owner  = THIS_MODULE,
+       .read   = layer7_read_proc,
+       .write  = layer7_write_proc,
+};
+
+static int layer7_init_proc(void)
 {
 	struct proc_dir_entry* entry;
-	entry = create_proc_entry("layer7_numpackets", 0644, init_net.proc_net);
-	entry->read_proc = layer7_read_proc;
-	entry->write_proc = layer7_write_proc;
+        entry = proc_create("layer7_numpackets", 0644, init_net.proc_net, &layer7_fops);
+        if (entry == NULL) {
+                return -ENOMEM;
+        }
+        return 0;
 }
 
 static int __init xt_layer7_init(void)
